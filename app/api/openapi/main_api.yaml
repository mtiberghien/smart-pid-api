openapi: 3.0.0
info:
  description: This api is dedidacted to train neural network using PPDG where the actor is a PID
  version: 1.0.0
  title: API Documentation - Smart PID

paths:
  /agent/remember:
    post:
      description: Store data into buffer memory
      operationId: app.api.agent.remember
      tags:
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/MemoryData'
      responses:
        "200":
          description: Successfully remembered data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          $ref: '#/components/responses/500-Execution'
  /agent/learn:
    get:
      description: Learn from buffer memory and return PID updated weights
      operationId: app.api.agent.learn
      tags:
        - Agent
      parameters:
        - in: query
          name: train_actor
          schema:
            type: boolean
            example: True
      responses:
        "200":
          description: Return the trained PID weights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorWeights'
        "400":
          description: There is no experience in buffer memory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          $ref: '#/components/responses/500-Execution'
  /agent/weights:
    get:
      description: Get Actor Weights
      operationId: app.api.agent.get_weights
      tags:
        - Agent
      responses:
        "200":
          description: Agent actor weights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorWeights'
    post:
      description: Set Actor Weights
      operationId: app.api.agent.set_weights
      tags:
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorWeights'
      responses:
        "200":
          description: PID updated weights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorWeightsResponse'
        "500":
          $ref: '#/components/responses/500-Execution'
  /agent/settings:
    get:
      description: Get Agent Settings
      operationId: app.api.agent.get_settings
      tags:
        - Agent
      responses:
        "200":
          description: Agent settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSettings'
    post:
      description: Set Agent Settings
      operationId: app.api.agent.set_settings
      tags:
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSettings'
      responses:
        "200":
          description: Updated Agent Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentSettingsResponse'
  /agent/actor/test:
    post:
      description: get result agent actor
      operationId: app.api.agent.test_actor
      tags:
        - Test
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActorInput'
      responses:
        "200":
          description: The neural network PID action related to input state
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: double
        "500":
          $ref: '#/components/responses/500-Execution'
  /agent/critic/test:
    post:
      description: get result agent actor
      operationId: app.api.agent.test_critic
      tags:
        - Test
        - Agent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CriticInput'
      responses:
        "200":
          description: The neural network critic action related to input state and pid action
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: double
        "500":
          $ref: '#/components/responses/500-Execution'
  /buffer/settings:
    get:
      description: buffer memory settings
      operationId: app.api.buffer.get_settings
      tags:
        - Buffer
      responses:
        "200":
          description: The buffer memory settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BufferSettings'
    post:
      description: Configure buffer memory settings
      operationId: app.api.buffer.set_settings
      tags:
        - Buffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BufferSettings'
        required: true

      responses:
        "200":
          description: Successfully saved buffer memory settings
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BufferSettings'
        "500":
          $ref: '#/components/responses/500-Execution'
  /buffer/reset:
    post:
      description: Erase all data from buffer memory
      operationId: app.api.buffer.reset
      tags:
        - Buffer
      responses:
        "200":
          description: Buffer memory was sucessfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        "500":
          $ref: '#/components/responses/500-Execution'
  /buffer/sample:
    get:
      tags:
        - Buffer
      description: Get a random sample from buffer memory
      operationId: app.api.buffer.get_sample
      parameters:
        - in: query
          name: batch_size
          schema:
            type: integer
      responses:
        "200":
          description: Sample was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sample'

servers:
  - url: /api

components:
  responses:
    500-Execution:
      description: Execution error occured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Response'
  schemas:
    BufferSettings:
      type: object
      properties:
        mem_size:
          description: agent memory max size
          type: integer
          example: 100000
        mem_index:
          description: agent memory index
          type: integer
          minimum: 1
          example: 1
    MemoryData:
      type: array
      minLength: 1
      items:
        type: array
        items:
          type: number
          format: double
        minLength: 11
        maxLength: 1
        example: [1,2,3,4,5,6,7,8,9,10,1]
      example: [[1,2,3,4,5,6,7,8,9,10,1],[11,12,13,14,15,16,17,18,19,20,2]]
    ActorInput:
      type: array
      minLength: 1
      example: [[1,2,3,4],[5,6,7,8],[-1,-2,-3,-4]]
      items:
          $ref: '#/components/schemas/State'
    CriticInput:
      type: array
      minLength: 1
      example: [ [ 1,2,3,4,5 ],[ 5,6,7,8,5],[ -1,-2,-3,-4, -5 ] ]
      items:
        $ref: '#/components/schemas/StateAction'
    ActorWeights:
      type: array
      minLength: 4
      maxLength: 4
      items:
        type: number
        format: double
      example:  [1.,2.,3.,4]
    Response:
      type: object
      properties:
        status:
          type: string
          example: ok
        message:
          type: string
    MemoryStorageResponse:
      $ref: '#/components/schemas/Response'
      properties:
        values:
          $ref: '#/components/schemas/MemoryData'
    ActorWeightsResponse:
      $ref: '#/components/schemas/Response'
      properties:
        values:
          $ref: '#/components/schemas/ActorWeights'
    AgentSettings:
      type: object
      properties:
        use_p:
          description: use proportional weight in PID
          type: boolean
          example: True
        use_i:
          description: Use integral weight in PID
          type: boolean
          example: True
        use_d:
          description: Use derivative weight in PID
          type: boolean
          example: False
        use_iu:
          description: Use antiwindup weight in PID
          type: boolean
          example: False
        alpha:
          description: model learning rate
          type: number
          format: double
          example: 0.001
        beta:
          description: target learning rate
          type: number
          format: double
          example: 0.002
        gamma:
          description: critic learning discount rate
          type: number
          format: double
          example: 0.99
        tau:
          description: soft update weight
          type: number
          format: double
          example: 0.05
        fc1:
          description: critic first layer kernels number
          type: integer
          example: 64
        fc2:
          description: critic second layer kernels number
          type: integer
          example: 64
        batch_size:
          description: learning batch size
          type: integer
          example: 256
        n_actions:
          description: number of actions generated by PID
          type: integer
          example: 2
        min_action:
          description: PID action low limit
          type: number
          format: double
          example: -5.0
        max_action:
          description: PID action high limit
          type: number
          format: double
          example: 5.0
    AgentSettingsResponse:
      $ref: '#/components/schemas/Response'
      properties:
        values:
          $ref: '#/components/schemas/AgentSettings'
    State:
      type: array
      items:
        type: number
        format: double
      minLength: 4
      maxLength: 4
      example: [1,2,3,4]
    StateAction:
      type: array
      items:
        type: number
        format: double
      minLength: 5
      maxLength: 5
      example: [ 1,2,3,4,5 ]
    Sample:
      type: object
      properties:
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
        actions:
          type: array
          items:
            type: number
            format: double
        rewards:
          type: array
          items:
            type: number
            format: double
        new_states:
          type: array
          items:
            $ref: '#/components/schemas/State'
        steps:
            type: array
            items:
              type: integer






